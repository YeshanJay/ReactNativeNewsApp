# Uncomment the next line to define a global platform for your project
# platform :ios, '9.0'

target 'ReactNativeNewsApp' do
  # Comment the next line if you don't want to use dynamic frameworks
  use_frameworks!

  # Pods for ReactNativeNewsApp
   pod 'React', :path => '../node_modules/react-native', :subspecs => [
   'Core',
   'CxxBridge', # Include this for RN >= 0.47
   'DevSupport', # Include this to enable In-App Devmenu if RN >= 0.43
   'RCTText',
   'RCTNetwork',
   'RCTWebSocket', # Needed for debugging
   'RCTAnimation', # Needed for FlatList and animations running on native UI thread
   'RCTCameraRoll',
   'RCTPushNotification',
   'RCTImage',
  
   'RCTBlob',
   'RCTActionSheet',
   'RCTGeolocation',
   'RCTVibration',
   'RCTSettings',
   'RCTLinkingIOS',
   # Add any other subspecs you want to use in your project
   # Remove any subspecs you don't want to use in your project
   ]
   #, :modular_headers => true
  
   pod 'yoga', :path => '../node_modules/react-native/ReactCommon/yoga'
   pod 'Folly', :podspec => '../node_modules/react-native/third-party-podspecs/Folly.podspec'
  


  pod 'RNGestureHandler', :path => '../node_modules/react-native-gesture-handler'



  pod 'RNVectorIcons', :path => '../node_modules/react-native-vector-icons'

  pod 'RNCAsyncStorage', :path => '../node_modules/@react-native-community/async-storage'

  target 'ReactNativeNewsAppTests' do
    inherit! :search_paths
    # Pods for testing
  end

end

target 'ReactNativeNewsApp-tvOS' do
  # Comment the next line if you don't want to use dynamic frameworks
  use_frameworks!

  # Pods for ReactNativeNewsApp-tvOS

  target 'ReactNativeNewsApp-tvOSTests' do
    inherit! :search_paths
    # Pods for testing
  end

end


post_install do |installer|
    ## Fix for XCode 12.5 beta
    ## Fix from - https://github.com/facebook/react-native/issues/28405#issuecomment-840914650
    find_and_replace("../node_modules/react-native/React/CxxBridge/RCTCxxBridge.mm",
    "_initializeModules:(NSArray<id<RCTBridgeModule>> *)modules", "_initializeModules:(NSArray<Class> *)modules")
    find_and_replace("../node_modules/react-native/ReactCommon/turbomodule/core/platform/ios/RCTTurboModuleManager.mm",
    "RCTBridgeModuleNameForClass(module))", "RCTBridgeModuleNameForClass(Class(module)))")

    ## Fix for when building on iOS 13+
    ## Refer - https://github.com/facebook/react-native/commit/46bdb4161c84b33f1d0612e9c7cdd824462a31fd
    ## Fix from - https://github.com/facebook/react-native/issues/25182#issuecomment-546997351
    find_and_replace("../node_modules/react-native/Libraries/fishhook/fishhook.c",
    "indirect_symbol_bindings[i] = cur->rebindings[j].replacement;", "// indirect_symbol_bindings[i] = cur->rebindings[j].replacement ; // Temp fix for iOS 13+")
    
    
    ## Refer - https://github.com/facebook/react-native/pull/25146/files
    ## Fix from - https://igniz87.medium.com/react-native-unknown-argument-type-attribute-in-method-rctappstate-5daf904b2367
    find_and_replace("../node_modules/react-native/React/Base/RCTModuleMethod.mm",
    "RCTReadString(input, \"__attribute__((unused))\");", "RCTReadString(input, \"__attribute__((unused))\") ||\r\n         RCTReadString(input, \"__attribute__((__unused__))\");")
end


def find_and_replace(dir, findstr, replacestr)
  Dir[dir].each do |name|
      text = File.read(name)
      replace = text.gsub(findstr,replacestr)
      if text != replace
          puts "Fix: " + name
          File.open(name, "w") { |file| file.puts replace }
          STDOUT.flush
      end
  end
  Dir[dir + '*/'].each(&method(:find_and_replace))
end
